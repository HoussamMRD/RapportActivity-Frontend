{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function distinct(keySelector, flushes) {\n  return function (source) {\n    return source.lift(new DistinctOperator(keySelector, flushes));\n  };\n}\n\nvar DistinctOperator = /*#__PURE__*/function () {\n  function DistinctOperator(keySelector, flushes) {\n    _classCallCheck(this, DistinctOperator);\n\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n\n  _createClass(DistinctOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n  }]);\n\n  return DistinctOperator;\n}();\n\nexport var DistinctSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(DistinctSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(DistinctSubscriber);\n\n  function DistinctSubscriber(destination, keySelector, flushes) {\n    var _this;\n\n    _classCallCheck(this, DistinctSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.keySelector = keySelector;\n    _this.values = new Set();\n\n    if (flushes) {\n      _this.add(subscribeToResult(_assertThisInitialized(_this), flushes));\n    }\n\n    return _this;\n  }\n\n  _createClass(DistinctSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this.values.clear();\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error, innerSub) {\n      this._error(error);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.keySelector) {\n        this._useKeySelector(value);\n      } else {\n        this._finalizeNext(value, value);\n      }\n    }\n  }, {\n    key: \"_useKeySelector\",\n    value: function _useKeySelector(value) {\n      var key;\n      var destination = this.destination;\n\n      try {\n        key = this.keySelector(value);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n\n      this._finalizeNext(key, value);\n    }\n  }, {\n    key: \"_finalizeNext\",\n    value: function _finalizeNext(key, value) {\n      var values = this.values;\n\n      if (!values.has(key)) {\n        values.add(key);\n        this.destination.next(value);\n      }\n    }\n  }]);\n\n  return DistinctSubscriber;\n}(OuterSubscriber); //# sourceMappingURL=distinct.js.map","map":{"version":3,"sources":["C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/rxjs/_esm2015/internal/operators/distinct.js"],"names":["OuterSubscriber","subscribeToResult","distinct","keySelector","flushes","source","lift","DistinctOperator","subscriber","subscribe","DistinctSubscriber","destination","values","Set","add","outerValue","innerValue","outerIndex","innerIndex","innerSub","clear","error","_error","value","_useKeySelector","_finalizeNext","key","err","has","next"],"mappings":";;;;;AAAA,SAAQA,eAAR,QAA8B,oBAA9B;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;AAEA,OAAO,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,OAA/B,EAAwC;AAC3C,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,gBAAJ,CAAqBJ,WAArB,EAAkCC,OAAlC,CAAZ,CAAZ;AAAA,GAAP;AACH;;IAEKG,gB;AACF,4BAAYJ,WAAZ,EAAyBC,OAAzB,EAAkC;AAAA;;AAC9B,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;;;WAED,cAAKI,UAAL,EAAiBH,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,kBAAJ,CAAuBF,UAAvB,EAAmC,KAAKL,WAAxC,EAAqD,KAAKC,OAA1D,CAAjB,CAAP;AACH;;;;;;AAGL,WAAaM,kBAAb;AAAA;;AAAA;;AACI,8BAAYC,WAAZ,EAAyBR,WAAzB,EAAsCC,OAAtC,EAA+C;AAAA;;AAAA;;AAC3C,8BAAMO,WAAN;AACA,UAAKR,WAAL,GAAmBA,WAAnB;AACA,UAAKS,MAAL,GAAc,IAAIC,GAAJ,EAAd;;AACA,QAAIT,OAAJ,EAAa;AACT,YAAKU,GAAL,CAASb,iBAAiB,gCAAOG,OAAP,CAA1B;AACH;;AAN0C;AAO9C;;AARL;AAAA;AAAA,WAUI,oBAAWW,UAAX,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,UAA/C,EAA2DC,QAA3D,EAAqE;AACjE,WAAKP,MAAL,CAAYQ,KAAZ;AACH;AAZL;AAAA;AAAA,WAcI,qBAAYC,KAAZ,EAAmBF,QAAnB,EAA6B;AACzB,WAAKG,MAAL,CAAYD,KAAZ;AACH;AAhBL;AAAA;AAAA,WAkBI,eAAME,KAAN,EAAa;AACT,UAAI,KAAKpB,WAAT,EAAsB;AAClB,aAAKqB,eAAL,CAAqBD,KAArB;AACH,OAFD,MAEO;AACH,aAAKE,aAAL,CAAmBF,KAAnB,EAA0BA,KAA1B;AACH;AACJ;AAxBL;AAAA;AAAA,WA0BI,yBAAgBA,KAAhB,EAAuB;AACnB,UAAIG,GAAJ;AACA,UAAOf,WAAP,GAAsB,IAAtB,CAAOA,WAAP;;AACA,UAAI;AACAe,QAAAA,GAAG,GAAG,KAAKvB,WAAL,CAAiBoB,KAAjB,CAAN;AACH,OAFD,CAEE,OAAOI,GAAP,EAAY;AACVhB,QAAAA,WAAW,CAACU,KAAZ,CAAkBM,GAAlB;AACA;AACH;;AACD,WAAKF,aAAL,CAAmBC,GAAnB,EAAwBH,KAAxB;AACH;AApCL;AAAA;AAAA,WAsCI,uBAAcG,GAAd,EAAmBH,KAAnB,EAA0B;AACtB,UAAOX,MAAP,GAAiB,IAAjB,CAAOA,MAAP;;AACA,UAAI,CAACA,MAAM,CAACgB,GAAP,CAAWF,GAAX,CAAL,EAAsB;AAClBd,QAAAA,MAAM,CAACE,GAAP,CAAWY,GAAX;AACA,aAAKf,WAAL,CAAiBkB,IAAjB,CAAsBN,KAAtB;AACH;AACJ;AA5CL;;AAAA;AAAA,EAAwCvB,eAAxC,E,CA+CA","sourcesContent":["import {OuterSubscriber} from '../OuterSubscriber';\r\nimport {subscribeToResult} from '../util/subscribeToResult';\r\n\r\nexport function distinct(keySelector, flushes) {\r\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\r\n}\r\n\r\nclass DistinctOperator {\r\n    constructor(keySelector, flushes) {\r\n        this.keySelector = keySelector;\r\n        this.flushes = flushes;\r\n    }\r\n\r\n    call(subscriber, source) {\r\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\r\n    }\r\n}\r\n\r\nexport class DistinctSubscriber extends OuterSubscriber {\r\n    constructor(destination, keySelector, flushes) {\r\n        super(destination);\r\n        this.keySelector = keySelector;\r\n        this.values = new Set();\r\n        if (flushes) {\r\n            this.add(subscribeToResult(this, flushes));\r\n        }\r\n    }\r\n\r\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.values.clear();\r\n    }\r\n\r\n    notifyError(error, innerSub) {\r\n        this._error(error);\r\n    }\r\n\r\n    _next(value) {\r\n        if (this.keySelector) {\r\n            this._useKeySelector(value);\r\n        } else {\r\n            this._finalizeNext(value, value);\r\n        }\r\n    }\r\n\r\n    _useKeySelector(value) {\r\n        let key;\r\n        const {destination} = this;\r\n        try {\r\n            key = this.keySelector(value);\r\n        } catch (err) {\r\n            destination.error(err);\r\n            return;\r\n        }\r\n        this._finalizeNext(key, value);\r\n    }\r\n\r\n    _finalizeNext(key, value) {\r\n        const {values} = this;\r\n        if (!values.has(key)) {\r\n            values.add(key);\r\n            this.destination.next(value);\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=distinct.js.map\r\n"]},"metadata":{},"sourceType":"module"}