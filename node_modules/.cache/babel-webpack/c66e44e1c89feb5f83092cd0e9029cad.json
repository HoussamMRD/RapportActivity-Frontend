{"ast":null,"code":"import _inherits from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function expand(project) {\n  var concurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n  var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\nexport var ExpandOperator = /*#__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    _classCallCheck(this, ExpandOperator);\n\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  _createClass(ExpandOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n  }]);\n\n  return ExpandOperator;\n}();\nexport var ExpandSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(ExpandSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(ExpandSubscriber);\n\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this;\n\n    _classCallCheck(this, ExpandSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  _createClass(ExpandSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n\n      if (destination.closed) {\n        this._complete();\n\n        return;\n      }\n\n      var index = this.index++;\n\n      if (this.active < this.concurrent) {\n        destination.next(value);\n\n        try {\n          var project = this.project;\n          var result = project(value, index);\n\n          if (!this.scheduler) {\n            this.subscribeToProjection(result, value, index);\n          } else {\n            var state = {\n              subscriber: this,\n              result: result,\n              value: value,\n              index: index\n            };\n            var _destination = this.destination;\n\n            _destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n          }\n        } catch (e) {\n          destination.error(e);\n        }\n      } else {\n        this.buffer.push(value);\n      }\n    }\n  }, {\n    key: \"subscribeToProjection\",\n    value: function subscribeToProjection(result, value, index) {\n      this.active++;\n      var destination = this.destination;\n      destination.add(subscribeToResult(this, result, value, index));\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.hasCompleted = true;\n\n      if (this.hasCompleted && this.active === 0) {\n        this.destination.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this._next(innerValue);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      var buffer = this.buffer;\n      var destination = this.destination;\n      destination.remove(innerSub);\n      this.active--;\n\n      if (buffer && buffer.length > 0) {\n        this._next(buffer.shift());\n      }\n\n      if (this.hasCompleted && this.active === 0) {\n        this.destination.complete();\n      }\n    }\n  }], [{\n    key: \"dispatch\",\n    value: function dispatch(arg) {\n      var subscriber = arg.subscriber,\n          result = arg.result,\n          value = arg.value,\n          index = arg.index;\n      subscriber.subscribeToProjection(result, value, index);\n    }\n  }]);\n\n  return ExpandSubscriber;\n}(OuterSubscriber); //# sourceMappingURL=expand.js.map","map":{"version":3,"sources":["C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/rxjs/_esm2015/internal/operators/expand.js"],"names":["OuterSubscriber","subscribeToResult","expand","project","concurrent","Number","POSITIVE_INFINITY","scheduler","undefined","source","lift","ExpandOperator","subscriber","subscribe","ExpandSubscriber","destination","index","active","hasCompleted","buffer","value","closed","_complete","next","result","subscribeToProjection","state","add","schedule","dispatch","e","error","push","complete","unsubscribe","outerValue","innerValue","outerIndex","innerIndex","innerSub","_next","remove","length","shift","arg"],"mappings":"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","sourcesContent":["import {OuterSubscriber} from '../OuterSubscriber';\r\nimport {subscribeToResult} from '../util/subscribeToResult';\r\n\r\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler = undefined) {\r\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\r\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\r\n}\r\n\r\nexport class ExpandOperator {\r\n    constructor(project, concurrent, scheduler) {\r\n        this.project = project;\r\n        this.concurrent = concurrent;\r\n        this.scheduler = scheduler;\r\n    }\r\n\r\n    call(subscriber, source) {\r\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\r\n    }\r\n}\r\n\r\nexport class ExpandSubscriber extends OuterSubscriber {\r\n    constructor(destination, project, concurrent, scheduler) {\r\n        super(destination);\r\n        this.project = project;\r\n        this.concurrent = concurrent;\r\n        this.scheduler = scheduler;\r\n        this.index = 0;\r\n        this.active = 0;\r\n        this.hasCompleted = false;\r\n        if (concurrent < Number.POSITIVE_INFINITY) {\r\n            this.buffer = [];\r\n        }\r\n    }\r\n\r\n    static dispatch(arg) {\r\n        const {subscriber, result, value, index} = arg;\r\n        subscriber.subscribeToProjection(result, value, index);\r\n    }\r\n\r\n    _next(value) {\r\n        const destination = this.destination;\r\n        if (destination.closed) {\r\n            this._complete();\r\n            return;\r\n        }\r\n        const index = this.index++;\r\n        if (this.active < this.concurrent) {\r\n            destination.next(value);\r\n            try {\r\n                const {project} = this;\r\n                const result = project(value, index);\r\n                if (!this.scheduler) {\r\n                    this.subscribeToProjection(result, value, index);\r\n                } else {\r\n                    const state = {subscriber: this, result, value, index};\r\n                    const destination = this.destination;\r\n                    destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\r\n                }\r\n            } catch (e) {\r\n                destination.error(e);\r\n            }\r\n        } else {\r\n            this.buffer.push(value);\r\n        }\r\n    }\r\n\r\n    subscribeToProjection(result, value, index) {\r\n        this.active++;\r\n        const destination = this.destination;\r\n        destination.add(subscribeToResult(this, result, value, index));\r\n    }\r\n\r\n    _complete() {\r\n        this.hasCompleted = true;\r\n        if (this.hasCompleted && this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n        this.unsubscribe();\r\n    }\r\n\r\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this._next(innerValue);\r\n    }\r\n\r\n    notifyComplete(innerSub) {\r\n        const buffer = this.buffer;\r\n        const destination = this.destination;\r\n        destination.remove(innerSub);\r\n        this.active--;\r\n        if (buffer && buffer.length > 0) {\r\n            this._next(buffer.shift());\r\n        }\r\n        if (this.hasCompleted && this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=expand.js.map\r\n"]},"metadata":{},"sourceType":"module"}