{"ast":null,"code":"import _classCallCheck from \"C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval() {\n  var scheduler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : async;\n  return function (source) {\n    return defer(function () {\n      return source.pipe(scan(function (_ref, value) {\n        var current = _ref.current;\n        return {\n          value: value,\n          current: scheduler.now(),\n          last: current\n        };\n      }, {\n        current: scheduler.now(),\n        value: undefined,\n        last: undefined\n      }), map(function (_ref2) {\n        var current = _ref2.current,\n            last = _ref2.last,\n            value = _ref2.value;\n        return new TimeInterval(value, current - last);\n      }));\n    });\n  };\n}\nexport var TimeInterval = function TimeInterval(value, interval) {\n  _classCallCheck(this, TimeInterval);\n\n  this.value = value;\n  this.interval = interval;\n}; //# sourceMappingURL=timeInterval.js.map","map":{"version":3,"sources":["C:/Users/AdMin/Desktop/frontend/pferouandi/node_modules/rxjs/_esm2015/internal/operators/timeInterval.js"],"names":["async","scan","defer","map","timeInterval","scheduler","source","pipe","value","current","now","last","undefined","TimeInterval","interval"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,oBAApB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,KAAR,QAAoB,qBAApB;AACA,SAAQC,GAAR,QAAkB,OAAlB;AAEA,OAAO,SAASC,YAAT,GAAyC;AAAA,MAAnBC,SAAmB,uEAAPL,KAAO;AAC5C,SAAO,UAACM,MAAD;AAAA,WAAYJ,KAAK,CAAC,YAAM;AAC3B,aAAOI,MAAM,CAACC,IAAP,CAAYN,IAAI,CAAC,gBAAYO,KAAZ;AAAA,YAAEC,OAAF,QAAEA,OAAF;AAAA,eAAuB;AAC3CD,UAAAA,KAAK,EAALA,KAD2C;AAE3CC,UAAAA,OAAO,EAAEJ,SAAS,CAACK,GAAV,EAFkC;AAG3CC,UAAAA,IAAI,EAAEF;AAHqC,SAAvB;AAAA,OAAD,EAInB;AAACA,QAAAA,OAAO,EAAEJ,SAAS,CAACK,GAAV,EAAV;AAA2BF,QAAAA,KAAK,EAAEI,SAAlC;AAA6CD,QAAAA,IAAI,EAAEC;AAAnD,OAJmB,CAAhB,EAI6DT,GAAG,CAAC;AAAA,YACKM,OADL,SACKA,OADL;AAAA,YAEKE,IAFL,SAEKA,IAFL;AAAA,YAGKH,KAHL,SAGKA,KAHL;AAAA,eAIO,IAAIK,YAAJ,CAAiBL,KAAjB,EAAwBC,OAAO,GAAGE,IAAlC,CAJP;AAAA,OAAD,CAJhE,CAAP;AASH,KAVuB,CAAjB;AAAA,GAAP;AAWH;AAED,WAAaE,YAAb,GACI,sBAAYL,KAAZ,EAAmBM,QAAnB,EAA6B;AAAA;;AACzB,OAAKN,KAAL,GAAaA,KAAb;AACA,OAAKM,QAAL,GAAgBA,QAAhB;AACH,CAJL,C,CAOA","sourcesContent":["import {async} from '../scheduler/async';\r\nimport {scan} from './scan';\r\nimport {defer} from '../observable/defer';\r\nimport {map} from './map';\r\n\r\nexport function timeInterval(scheduler = async) {\r\n    return (source) => defer(() => {\r\n        return source.pipe(scan(({current}, value) => ({\r\n            value,\r\n            current: scheduler.now(),\r\n            last: current\r\n        }), {current: scheduler.now(), value: undefined, last: undefined}), map(({\r\n                                                                                     current,\r\n                                                                                     last,\r\n                                                                                     value\r\n                                                                                 }) => new TimeInterval(value, current - last)));\r\n    });\r\n}\r\n\r\nexport class TimeInterval {\r\n    constructor(value, interval) {\r\n        this.value = value;\r\n        this.interval = interval;\r\n    }\r\n}\r\n\r\n//# sourceMappingURL=timeInterval.js.map\r\n"]},"metadata":{},"sourceType":"module"}